% Generates an image node with the given size and position.
% Arguments: width, height, filename, name, anchor
\newcommand{\makeimagenode}[5]{
    \node[anchor=north west, minimum width=#1, minimum height=#2, inner sep=0, outer sep=0] (#4) at #5 {};
    \node[anchor=north west, minimum width=#1, minimum height=#2, inner sep=0, outer sep=0] (#4-content) at #5 {\includegraphics[width=#1, height=#2]{#3}};
}

% Generates an image node with the given size and position.
% Clips a small portion of the content so when putting a frame around the image it does not flicker.
% Arguments: width, height, filename, name, anchor, color, linewidth
\newcommand{\makeframedimagenode}[7]{
    \node[anchor=north west, minimum width=#1, minimum height=#2, inner sep=0, outer sep=0] (#4) at #5 {};
    \node[anchor=center, minimum width=#1-#7, minimum height=#2-#7, inner sep=0, outer sep=0,
        draw={#6}, line width=#7] (#4-frame) at (#4.center) {};
    \begin{scope}
        \clip
            ([xshift = #7 * 0.5, yshift = #7 * 0.5]#4.south west)
            rectangle
            ([xshift = -#7 * 0.5, yshift = -#7 * 0.5]#4.north east);

        \node[anchor=north west, minimum width=#1, minimum height=#2, inner sep=0, outer sep=0] (#4-content) at #5 {\includegraphics[width=#1, height=#2]{#3}};
    \end{scope}
}

% Generates a node with text inside. The text is clipped to the node so it does not overlap
% with other content.
\newcommand\maketextnode[9]{%
    \def\width{#1}%
    \def\heighty{#2}% DO NOT CHANGE TO \height ! (workaround for LaTeX madness)
    \def\name{#3}%
    \def\anchor{#4}%
    \def\color{#5}%
    \def\fontsz{#6}%
    \def\content{#7}%
    \def\fill{#8}%
    \def\rot{#9}%
    \maketextnodecontinued
}
\newcommand\maketextnodecontinued[4]{%
    \def\vertal{#1}
    \def\horzal{#2}
    \def\padvert{#3}
    \def\padhorz{#4}

    \node[anchor=north west, minimum width=\width, minimum height=\heighty, inner sep=0, outer sep=0,
        fill=\fill] (\name) at \anchor {};
    \begin{scope}
        \clip (\name.south west) rectangle (\name.north east);
        \node[anchor=center, minimum width=\width, minimum height=\heighty, rotate=\rot, text=\color,
            inner sep=0, outer sep=0] at (\name.center)
        {
            \begin{minipage}[c][\heighty-\padvert-\padvert][\vertal]{\width-\padhorz-\padhorz} \fontsize{\fontsz}{\fontsz} \selectfont \horzal
                \content\strut
            \end{minipage}
        };
    \end{scope}
}

% Generates a node with text inside. The text is clipped to the node so it does not overlap
% with other content. Width and height of the innermost node are flipped, use this for rotated text.
\newcommand\maketextnodeflipped[9]{%
    \def\width{#1}%
    \def\heighty{#2}%
    \def\name{#3}%
    \def\anchor{#4}%
    \def\color{#5}%
    \def\fontsz{#6}%
    \def\content{#7}%
    \def\fill{#8}%
    \def\rot{#9}%
    \maketextnodeflippedcontinued
}
\newcommand\maketextnodeflippedcontinued[4]{%
    \def\vertal{#1}
    \def\horzal{#2}
    \def\padvert{#3}
    \def\padhorz{#4}

    \node[anchor=north west, minimum width=\width, minimum height=\heighty, inner sep=0, outer sep=0,
        fill=\fill] (\name) at \anchor {};
    \begin{scope}
        \clip (\name.south west) rectangle (\name.north east);
        \node[anchor=center, minimum width=\width, minimum height=\heighty, rotate=\rot, text=\color,
            inner sep=0, outer sep=0] at (\name.center)
        {
            \begin{minipage}[c][\width-\padvert-\padvert][\vertal]{\heighty-\padhorz-\padhorz} \fontsize{\fontsz}{\fontsz} \selectfont \horzal
                \content\strut
            \end{minipage}
        };
    \end{scope}
}

% Generates a rectangle marker (outline, no fill)
% Arguments: width, height, anchor, color, linewidth, linestyle (dashed or solid)
\newcommand{\makerectangle}[6]{
    \node[anchor=north west, minimum width=#1, minimum height=#2, draw={#4}, line width=#5, #6,
        inner sep=0, outer sep=0] () at #3 {};
}

% Draws a line on top of another node, clipped to never leave the node
% Arguments: parent node name, start, end, line width, line color
\newcommand{\makeclippedline}[5]{
    \begin{scope}
        \clip (#1.south west) rectangle (#1.north east);
        \draw[color={#5}, line width=#4] #2 -- #3;
    \end{scope}
}
